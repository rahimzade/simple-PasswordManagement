@using PasswordManager.Services
@using PasswordManager.Services.interfaces
@using PasswordManager.States
@inject UserStateService userStateService
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">PasswordManager</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">

        @if (IsLoggin == true)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="create">
                    <span class="oi oi-plus" aria-hidden="true"></span> Add User
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="users-list">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Users List
                </NavLink>
            </div>

        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-clock" aria-hidden="true"></span> Sign In
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool IsLoggin = false;


    public async Task OnSignin()
    {try{
        await InvokeAsync(() =>
        {
            IsLoggin = userStateService.userInfo != null;

            StateHasChanged();
        });
        }
        catch (Exception ex)
        {
            Serilog.Log.Error(ex.Message);
            throw;
        }
    }


    protected override void OnInitialized()
    {
        userStateService.Event += OnSignin;
    }


    public void Dispose()
    {
        userStateService.Event -= OnSignin;
    }



    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
